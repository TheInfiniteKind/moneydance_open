<!--
build file for ant (java and also with mixed java/kotlin support)
http://jakarta.apache.org/ant/index.html

** SET ANY OVERRIDING PROPERTIES IN THE /src/user.properties file >> loads first and overrides the below settings **

KOTLIN:
- Kotlin tasks defined in kotlin-ant.jar library, located in the lib folder in the Kotlin Compiler archive. Ant version 1.8.2+ is required.
- Kotlin command-line compiler: https://kotlinlang.org/docs/command-line.html
- or use `brew install kotlin`. It's also pre-installed with IntelliJ: <install location>/Contents/plugins/Kotlin/kotlinc
- use a symlink file named ${user.home}/bin/kotlin that points to the parent folder of your kotlin-compiler installation

to enable add `<withKotlin/>` to javac build command and make sure to include the *.kt source files...
note: as 'withKolin' can pull in unwanted kotlin files, we've replaced the standard build process with kotlinc
-->


<project name="moneydance_open" default="all" basedir=".">

  <property name="version" value="1.0"/>
  <property name="src" value="."/>
  <property name="python-src" value="../python_scripts"/>
  <property file="${src}/user.properties"/>
  <property name="kotlindir" value="${user.home}/bin/kotlin"/>
  <typedef resource="org/jetbrains/kotlin/ant/antlib.xml" classpath="${kotlindir}/lib/kotlin-ant.jar"/>

  <property name="build" value="./build"/>
  <property name="lib" value="../lib"/>
  <property name="extprivkeyfile" value="${src}/priv_key"/>
  <property name="extpubkeyfile" value="${src}/pub_key"/>
  <property name="privkeyid" value="99"/>
  <property name="keypass" value=""/>

  <property name="build.sysclasspath" value="ignore" /> <!-- suppress "includeantruntime not set" messages from ant -->
  <property name="build.compiler"  value="modern"/>
  <property name="build.compiler.fulldepend"  value="true"/>
  <property name="dist"  value="../dist"/>
  <property name="install"  value="${user.home}/.moneydance/fmodules"/>

  <property name="tmp"  value="../tmp"/>
  <property name="debug"  value="on"/>
  <property name="optimize"  value="off"/>
  <property name="javac-target" value="17"/>
  <property name="javac-source" value="17" />
  <property name="bootclasspath"  value="../lib/jdk_1.8_rt.jar"/> <!-- only used on legacy extns when source/target is 1.8 and bootclasspath="${bootclasspath}" is passed to javac -->
  <property name="python-executable" value="python2.7"/>          <!-- Need to use correct version if running ANT on Windows and Linux etc -->

  <path id="classpath">
    <fileset erroronmissingdir="false" dir="${md_ext_lib_dir}" includes="*.jar"/>
    <pathelement path="../lib/kotlin-stdlib-1.9.21.jar"/>
    <pathelement path="../lib/extadmin.jar"/>
    <pathelement path="../lib/moneydance-dev.jar"/>
    <pathelement path="../lib/moneydance-private.jar"/> <!-- If you absolutely MUST use something that isn't in the exposed MD API then put a moneydance.jar file from Moneydance 2015 or higher here.  But, please don't. -->

    <pathelement path="../lib/extadmin.jar"/> <!-- Since extadmin has a StringUtils, it needs to come after moneydance.jar -->
    <pathelement path="../lib/jfreechart-1.5.4.jar"/>
    <pathelement path="../lib/jcommon-1.0.24.jar"/>
    <pathelement path="../lib/gson-2.10.1.jar"/>
    <pathelement path="../lib/tablelayout-20070421.jar"/> <!-- used by findandreplace extension -->
    <pathelement path="../lib/mdpython.jar"/> <!-- Used for Python pre-compile -->
  </path>

  <!-- ******************************************** -->
  <!-- START OF STANDARD TARGET & MACRO DEFINITIONS -->
  <!-- ******************************************** -->
  <target name="init">
    <echo level="info" message="ANT Build Running.... Executing INIT" />
    <echo level="verbose" message="OS Name is:         ${os.name}" />
    <echo level="verbose" message="OS Architecture is: ${os.arch}" />
    <echo level="verbose" message="OS Version is:      ${os.version}" />
    <echo level="verbose" message="Kotlin dir:         ${kotlindir}" />
    <echo level="verbose" message="Source dir:         ${src}" />
    <echo level="verbose" message="build output dir:   ${build}" />
    <mkdir dir="${dist}"/>
    <mkdir dir="${build}"/>

    <!--
    Generic macro for building a specific feature.
    -->
    <macrodef name="build-mxt">
      <attribute name="feature"/> <!-- name of the mxt file -->
      <attribute name="javac-target" />
      <attribute name="javac-source"/>
      <attribute name="build-extra-classpath" default="_$_NONE_$_"/>
      <attribute name="jar-extra-includes" default="_$_NONE_$_"/>       <!-- ensure you 'depend' on the target that will pre-build this code to be included -->
      <sequential>
        <echo level="info" message="BUILD of '@{feature}' Java extension started..." />

        <echo level="info" message="... cleaning up prior mxt and build file/folder(s)..."/>
        <delete file="${dist}/@{feature}.mxt" />
        <!--
          since there aren't separate build directories for each feature,
          delete anything that wasn't from this feature already
        -->
        <delete includeemptydirs="true">
          <fileset dir="${build}">
            <include name="*/**" />
            <exclude name="com/moneydance/modules/features/@{feature}/*/**"/>
            <exclude name="@{jar-extra-includes}"/>  <!-- make sure we don't delete extra code to be bundled -->
          </fileset>
        </delete>

        <antcall target="maybe-touch-main-file">
          <param name="feature" value="@{feature}"/>
        </antcall>

        <echo level="info" message="... copying feature's key (non kt/java) resources..."/>
        <!-- copy all non java files for this feature -->
        <copy preservelastmodified="true" todir="${build}">
          <fileset dir="${src}">
            <include name="com/moneydance/modules/features/@{feature}/**" />
            <include name="license.txt" />
            <exclude name="**/*.java" /><!-- exclude source files -->
            <exclude name="**/*.kt" /><!-- exclude source files -->
            <exclude name="**/contact.*" />
          </fileset>
        </copy>
        <!-- move license and contact to book of mxt -->
        <copy preservelastmodified="true" todir="${build}">
          <fileset dir="${src}/com/moneydance/modules/features/@{feature}">
            <include name="contact.*" />
          </fileset>
        </copy>

        <echo level="info" message="... filtering any kotlin sources (if present)..."/>
        <!--KOTLIN SECTION-->
        <!-- copy/filter kotlin files to stop bleed-over from other extensions when using <withKotlin/> -->
        <delete dir="${build}/kt-filtered" failonerror="false"/>
        <mkdir dir="${build}/kt-filtered"/>
        <copy todir="${build}/kt-filtered">
          <fileset dir="${src}">
            <include name="com/moneydance/modules/features/@{feature}/**/*.kt"/>
          </fileset>
        </copy>

        <!--Check whether there are any kotlin / kt files to compile-->
        <antcall target="maybe-compile-kotlin">
          <param name="feature" value="@{feature}"/>
          <param name="build-extra-classpath" value="@{build-extra-classpath}"/>
        </antcall>

        <!--Check whether there are any java files to compile-->
        <antcall target="maybe-compile-java">
          <param name="feature" value="@{feature}"/>
          <param name="build-extra-classpath" value="@{build-extra-classpath}"/>
        </antcall>

        <echo level="info" message="... BUILDING jar file..."/>
        <echo level="info" message="...... (jar-extra-includes: '@{jar-extra-includes}', also including build-extra-classpath: '@{build-extra-classpath}')" />
        <jar destfile="${dist}/@{feature}.mxt" >

          <fileset dir="${build}">
            <include name="**"/>
            <exclude name="kt-filtered/**"/>    <!-- don't include any kotlin source files -->
          </fileset>

          <!-- note the extra code to be bundled should already exist in the build folder as we pre-compiled it - so it should already get captured -->
          <!--          <fileset dir="${build}" erroronmissingdir="false">-->
          <!--            <include name="@{jar-extra-includes}"/>-->
          <!--          </fileset>-->

          <!-- also bundle any jar used as an extra classpath to compile against -->
          <zipfileset src="@{build-extra-classpath}" erroronmissingarchive="false"/>

        </jar>
        <!-- delegating signing to another target to allow bypass when in eclipse -->
        <antcall target="sign" inheritall="true" inheritrefs="true">
          <param name="feature" value="@{feature}"/>
        </antcall>
        <echo level="info" message="BUILD of '@{feature}' Java extension COMPLETED" />
      </sequential>
    </macrodef>

  </target>


  <!--
  Generic target(s) touching the Main kt or java file when using build-mxt macro.
  -->
  <target name="maybe-touch-main-file">
    <fail unless="feature" message="ERROR - do not call this target ('maybe-touch-main-file') manually!" />

    <condition property="do.touch.main.kt">
      <and>
        <isset property="feature"/>
        <available file="${src}/com/moneydance/modules/features/${feature}/Main.kt"/>
      </and>
    </condition>

    <condition property="do.touch.main.java">
      <and>
        <isset property="feature"/>
        <available file="${src}/com/moneydance/modules/features/${feature}/Main.java"/>
      </and>
    </condition>

    <antcall target="touch-main-kt">
      <param name="feature" value="${feature}"/>
    </antcall>

    <antcall target="touch-main-java">
      <param name="feature" value="${feature}"/>
    </antcall>
  </target>

  <target name="touch-main-kt" if="do.touch.main.kt">
    <fail unless="feature" message="ERROR - do not call this target ('touch-main-kt') manually!" />
    <echo level="info" message="...... touching Main.kt"/>
    <touch file="${src}/com/moneydance/modules/features/${feature}/Main.kt"/>
  </target>

  <target name="touch-main-java" if="do.touch.main.java">
    <fail unless="feature" message="ERROR - do not call this target ('touch-main-java') manually!" />
    <echo level="info" message="...... touching Main.java"/>
    <touch file="${src}/com/moneydance/modules/features/${feature}/Main.java"/>
  </target>

  <!--
  Generic target(s) for compiling kotlin if kt files are detected when using build-mxt macro.
  -->
  <target name="maybe-compile-kotlin">                                <!-- call via 'antcall' so properties are not remembered! -->
    <fail unless="feature" message="ERROR - do not call this target ('maybe-kotlin-if-present') manually!" />

    <condition property="should.compile.kt">
      <resourcecount when="greater" count="0">
        <fileset dir="${build}/kt-filtered">
          <include name="**/*.kt"/>
        </fileset>
      </resourcecount>
    </condition>

    <antcall target="compile-kotlin-if-present">
      <param name="feature" value="${feature}"/>
      <param name="build-extra-classpath" value="${build-extra-classpath}"/>
    </antcall>
  </target>

  <target name="compile-kotlin-if-present" if="should.compile.kt">    <!-- call via 'antcall' so properties are not remembered! -->
    <fail unless="feature" message="ERROR - do not call this target ('compile-kotlin-if-present') manually!"/>
    <echo level="info" message="... COMPILING kotlin code..."/>
    <echo level="info" message="...... (build-extra-classpath: '${build-extra-classpath}')"/>
    <kotlinc src="${build}/kt-filtered"
      output="${build}"
      classpathref="classpath"
      classpath="${build-extra-classpath}"
      nowarn="true"
      includeRuntime="false"/>
  </target>

  <!--
  Generic target(s) for compiling java if java files are detected when using build-mxt macro.
  -->
  <target name="maybe-compile-java">                                  <!-- call via 'antcall' so properties are not remembered! -->
    <fail unless="feature" message="ERROR - do not call this target ('maybe-compile-java') manually!"/>

    <condition property="should.compile.java">
      <resourcecount when="greater" count="0">
        <fileset dir="${src}">
          <include name="com/moneydance/modules/features/${feature}/**/*.java"/>
        </fileset>
      </resourcecount>
    </condition>

    <antcall target="compile-java-if-present">
      <param name="feature" value="${feature}"/>
      <param name="build-extra-classpath" value="${build-extra-classpath}"/>
    </antcall>
  </target>

  <target name="compile-java-if-present" if="should.compile.java">    <!-- call via 'antcall' so properties are not remembered! -->
    <fail unless="feature" message="ERROR - do not call this target ('compile-java-if-present') manually!"/>
    <echo level="info" message="... COMPILING java code (if present)..."/>
    <echo level="info" message="...... (build-extra-classpath: '${build-extra-classpath}')"/>
    <javac target="${javac-target}" source="${javac-source}" srcdir="${src}"
      debug="${debug}" optimize="${optimize}" encoding="utf8"
      classpathref="classpath" destdir="${build}"
      classpath="${build-extra-classpath}"
      includes="com/moneydance/modules/features/${feature}/**/*.java"
      includeAntRuntime="false">
      <compilerarg value="-Xlint:-options"/>
    </javac>

  </target>

  <target name="clean" depends="init" description="remove (all) built artifacts and transient build files/folders">
    <delete dir="${dist}" />
    <delete dir="${build}" />
  </target>

  <target name="clean-feature" description="clean specific feature build">
    <fail unless="feature" message="Please specify property 'feature'"/>
    <echo level="info" message="CLEANING ${feature}.mxt:"/>
    <delete file="${dist}/${feature}.mxt" failonerror="false"/>
    <delete file="${dist}/s-${feature}.mxt" failonerror="false"/>
    <delete failonerror="false">
      <fileset dir="${build}">
        <include name="com/moneydance/modules/features/${feature}/**/*.class"/>
      </fileset>
    </delete>
    <echo level="info" message="FINISHED cleaning feature..."/>
  </target>

  <target name="sign" description="sign the mxt" unless="dont_sign">
  	<fail unless="feature" message="Please specify property feature" />
    <echo level="info" message="SIGNING ${feature}.mxt using key ${extprivkeyfile} (ID: ${privkeyid}):" />
    <java failonerror="true"
          newenvironment="true"
          classpathref="classpath"
          classname="com.moneydance.admin.KeyAdmin"
          fork="true">
          <sysproperty key="moneydance_key_pass" value="${keypass}"/>
          <arg value="signextjar"/>
          <arg value="${extprivkeyfile}"/>
          <arg value="${privkeyid}"/>
          <arg value="${feature}"/>
          <arg line="${dist}/${feature}.mxt"/>
    </java>

    <move file="s-${feature}.mxt" tofile="${dist}/s-${feature}.mxt" failonerror="false"/>
    <move file="${dist}/s-${feature}.mxt" tofile="${dist}/${feature}.mxt"/>

    <!--    <copy file="${dist}/${feature}.mxt" tofile="${install}/${feature}.mxt" verbose="true" failonerror="false" />-->

    <echo level="info" message="FINISHED signing mxt..." />
  </target>

  <target name="package-python-mxt" description="package and sign python scripts into an extension file" unless="dont_sign">
    <fail unless="feature" message="Please specify the extension ID in the 'feature' parameter" />
    <fail unless="python-base" message="Please specify the folder containing python scripts and metadata files in the 'python-base' parameter" />
    <echo level="info" message="SIGNING ${feature}.mxt using key ${extprivkeyfile} (ID: ${privkeyid}):" />
    <java newenvironment="true"
          classpathref="classpath"
          classname="com.moneydance.admin.PythonExtensionPackager"
          fork="true">
      <sysproperty key="moneydance_key_pass" value="${keypass}"/>
      <arg value="${extprivkeyfile}"/>
      <arg value="${privkeyid}"/>
      <arg value="${feature}"/>
      <arg value="${python-base}"/>
      <arg value="${dist}"/>
    </java>
    <delete file="${python-base}/${feature}.pyc" verbose="false" failonerror="false" />
    <delete file="${python-base}/${feature}$py.class" verbose="false" failonerror="false" />

<!--    <delete verbose="false" failonerror="false">-->
<!--      <fileset dir="${python-base}" includes="${bundled-java}*.class"/>-->
<!--    </delete>-->

  </target>

  <target name="pre-compile-python" description="pre-compile python to generate both pyc and .class files" unless="dont_compile">
    <fail unless="python-executable" message="Please specify the 'python-executable' name as a parameter" />

    <echo level="info" message="PRE-COMPILING Jython to create CPython bytecode .pyc file" />
    <delete file="${python-base}/${feature}.pyc" verbose="false" failonerror="false" />
    <exec executable="${python-executable}"
      resolveexecutable="true"
      failonerror="true"
      failifexecutionfails="true"
      searchpath="true"
      >
      <arg value="-m"/>
      <arg value="py_compile"/>
      <arg value="${python-base}/${feature}.py"/>
    </exec>

    <echo level="verbose" message="COMPILING Jython script to create java $py.class file" />
    <delete file="${python-base}/${feature}$py.class" verbose="false" failonerror="false" />
    <java newenvironment="true"
      failonerror="true"
      classpathref="classpath"
      classname="org.python.util.jython"
      fork="true">
      <arg value="-c"/>
      <arg value="import compileall; compileall.compile_file('${python-base}/${feature}.py')"/>
    </java>

    <echo level="info" message="COMPILATION routines COMPLETED" />

  </target>

  <target name="genkeys">
    <java
      failonerror="true"
      fork="true"
      classpathref="classpath"
      classname="com.moneydance.admin.KeyAdmin">
      <arg value="genkey"/>
      <arg value="${extprivkeyfile}"/>
      <arg value="${extpubkeyfile}"/>
    </java>
  </target>

  <target name="all" depends="init, all_java_kotlin, all_python"/>
  <target name="all_java_kotlin" depends="init, yahooqt, yahoofx, priceui, findandreplace, debtinsights, ratios, stockglance, securityquoteload, securitypriceload, securityhistoryload, qifloader, filedisplay, loadsectrans, mousetester"/>
  <target name="all_python" depends="init, toolbox, extract_data, list_future_reminders, net_account_balances, extension_tester, accounts_categories_mega_search_window, security_performance_graph"/>


  <!-- ****************************************** -->
  <!-- END OF STANDARD TARGET & MACRO DEFINITIONS -->
  <!-- ****************************************** -->



  <!-- ****************************************** -->
  <!-- START OF JAVA EXTENSION TARGET DEFINITIONS -->
  <!-- ****************************************** -->

  <target name="yahooqt" depends="init">
    <build-mxt feature="yahooqt"
      javac-source="${javac-source}" javac-target="${javac-source}"
      build-extra-classpath="${lib}/jsoup-1.11.3.jar"/>
  </target>

  <target name="yahoofx" depends="init">
    <build-mxt feature="yahoofx"
      javac-source="${javac-source}" javac-target="${javac-source}"/>
  </target>

  <target name="priceui" depends="init" description="build the priceui.mxt">
    <build-mxt feature="priceui" javac-source="${javac-source}" javac-target="${javac-target}"/>
  </target>

  <target name="findandreplace" depends="init">
    <build-mxt feature="findandreplace"
      javac-source="${javac-source}" javac-target="${javac-source}"
      build-extra-classpath="${lib}/TableLayout-bin-jdk1.5-2009-08-26.jar"/>
  </target>

  <target name="debtinsights" depends="init" description="build the debtinsights.mxt">
    <build-mxt feature="debtinsights" javac-source="${javac-source}" javac-target="${javac-source}" />
  </target>

  <target name="ratios" depends="init">
    <build-mxt feature="ratios"
      javac-source="${javac-source}" javac-target="${javac-source}"/>
  </target>

  <target name="stockglance" depends="init">
    <build-mxt feature="stockglance"
      javac-source="${javac-source}" javac-target="${javac-source}"/>
  </target>

  <!-- NOTE: mrbutil is not an extension. It's a code module for Mike Bray's extensions (e.g. securityquoteload) -->
  <target name="mrbutil">
    <echo level="info" message="PRE-COMPILING 'mrbutil'"/>
    <javac target="${javac-target}" release="${javac-target}" source="${javac-source}" srcdir="${src}" debug="${debug}" optimize="${optimize}"
      classpathref="classpath"  destdir="${build}"
      includes="com/moneydance/modules/features/mrbutil/**/*.java"
      excludes="com/moneydance/modules/features/mrbutil/Graph**"/>
  </target>

  <target name="securityquoteload" depends="init, mrbutil">
    <build-mxt feature="securityquoteload"
      javac-source="${javac-source}" javac-target="${javac-source}"
      jar-extra-includes="com/moneydance/modules/features/mrbutil/**"
      build-extra-classpath="${lib}/jsoup-1.11.3.jar"/>
  </target>

  <target name="cleansecurityquoteload">
    <antcall target="clean-feature" inheritall="true" inheritrefs="true">
      <param name="feature" value="securityquoteload" />
    </antcall>
  </target>

  <target name="securitypriceload" depends="init, mrbutil">
    <build-mxt feature="securitypriceload"
      javac-source="${javac-source}" javac-target="${javac-source}"
      jar-extra-includes="com/moneydance/modules/features/mrbutil/**"/>
  </target>

  <target name="cleansecuritypriceload">
    <antcall target="clean-feature" inheritall="true" inheritrefs="true">
      <param name="feature" value="securitypriceload" />
    </antcall>
  </target>

  <target name="securityhistoryload" depends="init, mrbutil">
    <build-mxt feature="securityhistoryload"
      javac-source="${javac-source}" javac-target="${javac-source}"
      jar-extra-includes="com/moneydance/modules/features/mrbutil/**"/>
  </target>

  <target name="cleansecurityhistoryload">
    <antcall target="clean-feature" inheritall="true" inheritrefs="true">
      <param name="feature" value="securityhistoryload" />
    </antcall>
  </target>

  <target name="qifloader" depends="init, mrbutil">
    <build-mxt feature="qifloader"
      javac-source="${javac-source}" javac-target="${javac-source}"
      jar-extra-includes="com/moneydance/modules/features/mrbutil/**"/>
  </target>

  <target name="filedisplay" depends="init">
    <build-mxt feature="filedisplay"
      javac-source="${javac-source}" javac-target="${javac-source}"/>
  </target>

  <target name="loadsectrans" depends="init, mrbutil">
    <build-mxt feature="loadsectrans"
      javac-source="${javac-source}" javac-target="${javac-source}"
      jar-extra-includes="com/moneydance/modules/features/mrbutil/**"/>
  </target>

  <target name="balpred" depends="init">
    <build-mxt feature="balpred"
      javac-source="${javac-source}" javac-target="${javac-source}"/>
  </target>

  <target name="mikebalpred" depends="init">
    <build-mxt feature="mikebalpred"
      javac-source="${javac-source}" javac-target="${javac-source}"/>
  </target>

  <target name="detailedbudget" depends="init" description="build the detailedbudget.mxt">
    <build-mxt feature="detailedbudget" javac-source="${javac-source}" javac-target="${javac-source}" />
  </target>

  <target name="txfexport" depends="init" description="build the TXF export extension">
    <build-mxt feature="txfexport" javac-source="${javac-source}" javac-target="${javac-source}" />
  </target>

  <target name="txtimport" depends="init">
    <build-mxt feature="txtimport"
      javac-source="${javac-source}" javac-target="${javac-source}"/>
  </target>

  <target name="featureloader" depends="init" description="build the featureloader.mxt">
    <build-mxt feature="featureloader" javac-source="${javac-source}" javac-target="${javac-source}" />
  </target>

  <target name="console" depends="init">
    <build-mxt feature="console"
      javac-source="${javac-source}" javac-target="${javac-source}"/>
  </target>

  <target name="cmdline" depends="init">
    <build-mxt feature="cmdline"
      javac-source="${javac-source}" javac-target="${javac-source}"/>
  </target>

  <target name="moneyPie" depends="init">
    <build-mxt feature="moneyPie"
      javac-source="${javac-source}" javac-target="${javac-source}"
      build-extra-classpath="${lib}/moneyPieSupport.jar"/>
  </target>

  <target name="report_test_java" depends="init" description="build the test report.mxt">
    <build-mxt feature="report_test_java" javac-source="${javac-source}" javac-target="${javac-target}"/>
  </target>

  <target name="mousetester" depends="init">
    <build-mxt feature="mousetester"
      javac-source="${javac-source}" javac-target="${javac-source}"/>
  </target>

  <target name="customgraphreports" depends="init">
    <build-mxt feature="customgraphreports"
      javac-source="${javac-source}" javac-target="${javac-source}"/>
  </target>



  <!-- ******************************************** -->
  <!-- START OF PYTHON EXTENSION TARGET DEFINITIONS -->
  <!-- ******************************************** -->

  <target name="extension_tester" depends="init">
    <antcall target="package-python-mxt" inheritall="true" inheritrefs="true">
      <param name="feature" value="extension_tester" />
      <param name="python-base" value="${python-src}/extension_tester" />
    </antcall>
  </target>

  <target name="toolbox" depends="init">
    <antcall target="pre-compile-python" inheritall="true" inheritrefs="true">
      <param name="feature" value="toolbox" />
      <param name="python-base" value="${python-src}/toolbox" />
    </antcall>
    <antcall target="package-python-mxt" inheritall="true" inheritrefs="true">
      <param name="feature" value="toolbox" />
      <param name="python-base" value="${python-src}/toolbox" />
    </antcall>
  </target>

  <target name="extract_data" depends="init">
    <antcall target="pre-compile-python" inheritall="true" inheritrefs="true">
      <param name="feature" value="extract_data" />
      <param name="python-base" value="${python-src}/extract_data" />
    </antcall>
    <antcall target="package-python-mxt" inheritall="true" inheritrefs="true">
      <param name="feature" value="extract_data" />
      <param name="python-base" value="${python-src}/extract_data" />
    </antcall>
  </target>

  <target name="list_future_reminders" depends="init">
    <antcall target="pre-compile-python" inheritall="true" inheritrefs="true">
      <param name="feature" value="list_future_reminders" />
      <param name="python-base" value="${python-src}/list_future_reminders" />
    </antcall>
    <antcall target="package-python-mxt" inheritall="true" inheritrefs="true">
      <param name="feature" value="list_future_reminders" />
      <param name="python-base" value="${python-src}/list_future_reminders" />
    </antcall>
  </target>

  <target name="net_account_balances" depends="init">
    <antcall target="pre-compile-python" inheritall="true" inheritrefs="true">
      <param name="feature" value="net_account_balances" />
      <param name="python-base" value="${python-src}/net_account_balances" />
    </antcall>
<!--    <antcall target="compile-bundled-java" inheritall="true" inheritrefs="true">-->
<!--      <param name="feature" value="net_account_balances" />-->
<!--      <param name="python-base" value="${python-src}/net_account_balances" />-->
<!--      <param name="bundled-java" value="StuWareSoftSystems_CommonCode" />-->
<!--    </antcall>-->
    <antcall target="package-python-mxt" inheritall="true" inheritrefs="true">
      <param name="feature" value="net_account_balances" />
      <param name="python-base" value="${python-src}/net_account_balances" />
<!--      <param name="bundled-java" value="StuWareSoftSystems_CommonCode" />-->
    </antcall>
  </target>

  <target name="accounts_categories_mega_search_window" depends="init">
    <antcall target="package-python-mxt" inheritall="true" inheritrefs="true">
      <param name="feature" value="accounts_categories_mega_search_window" />
      <param name="python-base" value="${python-src}/accounts_categories_mega_search_window" />
    </antcall>
  </target>

  <target name="security_performance_graph" depends="init">
    <antcall target="pre-compile-python" inheritall="true" inheritrefs="true">
      <param name="feature" value="security_performance_graph" />
      <param name="python-base" value="${python-src}/security_performance_graph" />
    </antcall>
    <antcall target="package-python-mxt" inheritall="true" inheritrefs="true">
      <param name="feature" value="security_performance_graph" />
      <param name="python-base" value="${python-src}/security_performance_graph" />
    </antcall>
  </target>

</project>
